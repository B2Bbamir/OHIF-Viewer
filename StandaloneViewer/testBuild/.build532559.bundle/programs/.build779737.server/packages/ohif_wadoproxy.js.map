{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:wadoproxy/both/namespace.js","meteor://ðŸ’»app/packages/ohif:wadoproxy/both/convertURL.js","meteor://ðŸ’»app/packages/ohif:wadoproxy/both/initialize.js","meteor://ðŸ’»app/packages/ohif:wadoproxy/server/routes.js"],"names":["WADOProxy","queryString","module","watch","require","default","v","convertURL","url","serverConfiguration","requestOptions","requestFromBrowser","settings","serverId","_id","query","stringify","uri","Meteor","OHIF","Object","assign","utils","absoluteUrl","proxy","Router","Servers","http","https","now","doAuth","authenticateUser","user","handleRequest","request","response","params","start","writeHead","end","authenticationTime","server","findOne","requestOpt","wadoUrl","logRequests","console","log","logTiming","time","parsed","parse","options","headers","method","hostname","path","requester","protocol","allowUnauthorizedAgent","Agent","rejectUnauthorized","agent","port","keys","forEach","entry","value","auth","prepRequestTime","proxyRequest","proxyResponse","proxyReqTime","totalProxyTime","serverTimingHeaders","replace","statusCode","timeEnd","pipe","on","error","message","route","where"],"mappings":"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","file":"/packages/ohif_wadoproxy.js","sourcesContent":["WADOProxy = {};\n","import queryString from 'query-string';\n\nWADOProxy.convertURL = (url, serverConfiguration) => {\n    if (!url) {\n        return null;\n    }\n\n    if (serverConfiguration.requestOptions &&\n        serverConfiguration.requestOptions.requestFromBrowser === true) {\n        return url;\n    }\n\n    const { settings } = WADOProxy;\n    const serverId = serverConfiguration._id;\n    const query = queryString.stringify({url, serverId});\n\n    return `${settings.uri}?${query}`;\n}\n","import { Meteor } from 'meteor/meteor';\r\nimport { OHIF } from 'meteor/ohif:core';\r\n\r\nWADOProxy.settings = Object.assign({\r\n    uri : OHIF.utils.absoluteUrl(\"/__wado_proxy\"),\r\n}, (Meteor.settings && Meteor.settings.proxy) ? Meteor.settings.proxy : {});\r\n","import { Meteor } from 'meteor/meteor';\nimport { Router } from 'meteor/clinical:router';\nimport { OHIF } from 'meteor/ohif:core';\nimport { Servers } from 'meteor/ohif:servers/both/collections';\n\nconst url = require('url');\nconst http = require('http');\nconst https = require('https');\nconst now = require('performance-now');\n\n// The WADO Proxy can perform user authentication if desired.\n// In order to use this, create a function to override\n// OHIF.user.authenticateUser(request), which returns a Boolean.\nlet doAuth = false;\nlet authenticateUser = null;\n\nif (OHIF.user &&\n    OHIF.user.authenticateUser) {\n    doAuth = true;\n    authenticateUser = OHIF.user.authenticateUser;\n}\n\nconst handleRequest = function() {\n  const request = this.request;\n  const response = this.response;\n  const params = this.params;\n\n  let start = now();\n  let user;\n  if (doAuth) {\n      user = authenticateUser(request);\n      if (!user) {\n          response.writeHead(401);\n          response.end('Error: You must be logged in to perform this action.\\n');\n          return;\n      }\n  }\n\n  let end = now();\n  const authenticationTime = end - start;\n\n  start = now();\n\n  const server = Servers.findOne(params.query.serverId);\n  if (!server) {\n      response.writeHead(500);\n      response.end('Error: No Server with the specified Server ID was found.\\n');\n      return;\n  }\n\n  const requestOpt = server.requestOptions;\n\n  // If no Web Access to DICOM Objects (WADO) Service URL is provided\n  // return an error for the request.\n  const wadoUrl = params.query.url;\n  if (!wadoUrl) {\n      response.writeHead(500);\n      response.end('Error: No WADO URL was provided.\\n');\n      return;\n  }\n\n  if (requestOpt.logRequests) {\n      console.log(request.url);\n  }\n\n  start = now();\n  if (requestOpt.logTiming) {\n      console.time(request.url);\n  }\n\n  // Use Node's URL parse to decode the query URL\n  const parsed = url.parse(wadoUrl);\n\n  // Create an object to hold the information required\n  // for the request to the PACS.\n  let options = {\n      headers: {},\n      method: request.method,\n      hostname: parsed.hostname,\n      path: parsed.path\n  };\n\n  let requester;\n  if (parsed.protocol === 'https:') {\n      requester = https.request;\n\n      const allowUnauthorizedAgent = new https.Agent({ rejectUnauthorized: false });\n      options.agent = allowUnauthorizedAgent;\n  } else {\n      requester = http.request;\n  }\n\n  if (parsed.port) {\n      options.port = parsed.port;\n  }\n\n  Object.keys(request.headers).forEach(entry => {\n      const value = request.headers[entry];\n      if (entry) {\n          options.headers[entry] = value;\n      }\n  });\n\n  // Retrieve the authorization user:password string for the PACS,\n  // if one is required, and include it in the request to the PACS.\n  if (requestOpt.auth) {\n      options.auth = requestOpt.auth;\n  }\n\n  end = now();\n  const prepRequestTime = end - start;\n\n  // Use Node's HTTP API to send a request to the PACS\n  const proxyRequest = requester(options, proxyResponse => {\n      // When we receive data from the PACS, stream it as the\n      // response to the original request.\n      // console.log(`Got response: ${proxyResponse.statusCode}`);\n      end = now();\n      const proxyReqTime = end - start;\n      const totalProxyTime = authenticationTime + prepRequestTime + proxyReqTime;\n      const serverTimingHeaders = `\n        auth;dur=${authenticationTime};desc=\"Authenticate User\";,\n\t\tprep-req;dur=${prepRequestTime};desc=\"Prepare Request Headers\",\n\t    proxy-req;dur=${proxyReqTime};desc=\"Request to WADO server\",\n        total-proxy;dur=${totalProxyTime};desc=\"Total\"\n        `.replace(/\\n/g, '')\n\n      proxyResponse.headers['Server-Timing'] = serverTimingHeaders;\n\n      response.writeHead(proxyResponse.statusCode, proxyResponse.headers);\n\n      if (requestOpt.logTiming) {\n          console.timeEnd(request.url);\n      }\n\n      return proxyResponse.pipe(response, { end: true });\n  });\n\n  // If our request to the PACS fails, log the error message\n  proxyRequest.on('error', error => {\n      end = now();\n      const proxyReqTime = end - start;\n      const totalProxyTime = authenticationTime + prepRequestTime + proxyReqTime;\n      console.timeEnd(request.url);\n\n      const serverTimingHeaders = {\n          'Server-Timing': `\n              auth;dur=${authenticationTime};desc=\"Authenticate User\";,\n              prep-req;dur=${prepRequestTime};desc=\"Prepare Request Headers\",\n              proxy-req;dur=${proxyReqTime};desc=\"Request to WADO server\",\n              total-proxy;dur=${totalProxyTime};desc=\"Total\"\n          `.replace(/\\n/g, '')\n      };\n\n      response.writeHead(500, serverTimingHeaders);\n      response.end(`Error: Problem with request to PACS: ${error.message}\\n`);\n  });\n\n  // Stream the original request information into the request\n  // to the PACS\n  request.pipe(proxyRequest);\n}\n\n// Setup a Route using Iron Router to avoid Cross-origin resource sharing\n// (CORS) errors. We only handle this route on the Server.\nRouter.route(WADOProxy.settings.uri.replace(OHIF.utils.absoluteUrl(), ''), handleRequest, { where: 'server' });\n"]}