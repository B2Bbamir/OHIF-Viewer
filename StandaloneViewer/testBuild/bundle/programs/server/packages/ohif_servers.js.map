{"version":3,"sources":["meteor://ðŸ’»app/packages/ohif:servers/both/index.js","meteor://ðŸ’»app/packages/ohif:servers/both/base.js","meteor://ðŸ’»app/packages/ohif:servers/both/collections/currentServer.js","meteor://ðŸ’»app/packages/ohif:servers/both/collections/index.js","meteor://ðŸ’»app/packages/ohif:servers/both/collections/servers.js","meteor://ðŸ’»app/packages/ohif:servers/both/lib/getCurrentServer.js","meteor://ðŸ’»app/packages/ohif:servers/both/lib/index.js","meteor://ðŸ’»app/packages/ohif:servers/server/index.js","meteor://ðŸ’»app/packages/ohif:servers/server/methods.js","meteor://ðŸ’»app/packages/ohif:servers/server/publications.js","meteor://ðŸ’»app/packages/ohif:servers/server/startup.js","meteor://ðŸ’»app/packages/ohif:servers/server/lib/control.js","meteor://ðŸ’»app/packages/ohif:servers/server/lib/index.js"],"names":["module","watch","require","OHIF","v","servers","collections","export","CurrentServer","Mongo","collectionName","Meteor","settings","public","clientOnly","Collection","_debugName","currentServer","Servers","getCurrentServer","findOne","serverConfiguration","_id","serverId","methods","serverFind","query","control","find","serverSave","serverSettings","save","serverSetActive","setActive","serverRemove","remove","publish","fields","_","startup","log","info","each","endpoints","serverType","endpoint","server","clone","origin","type","existingServer","name","update","$set","insert","resetCurrentServer","writeCallback","error","affected","Error","count","newServer","defaultServiceType","fetch","options","upsert","removeStatus"],"mappings":"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","file":"/packages/ohif_servers.js","sourcesContent":["import './base.js';\nimport './collections';\nimport './lib';\n","import { OHIF } from 'meteor/ohif:core';\n\nOHIF.servers = {\n    collections: {}\n};\n","import { Mongo } from 'meteor/mongo';\nimport { OHIF } from 'meteor/ohif:core';\n\n// CurrentServer is a single document collection to describe which of the Servers is being used\nlet collectionName = 'currentServer';\nif (Meteor.settings && Meteor.settings.public && Meteor.settings.public.clientOnly === true) {\n    collectionName = null;\n}\n\nconst CurrentServer = new Mongo.Collection(collectionName);\nCurrentServer._debugName = 'CurrentServer';\nOHIF.servers.collections.currentServer = CurrentServer;\n\nexport { CurrentServer };\n","import { CurrentServer } from './currentServer.js';\nimport { Servers } from './servers.js';\n\nexport { CurrentServer, Servers };\n","import { Mongo } from 'meteor/mongo';\nimport { OHIF } from 'meteor/ohif:core';\n// import { Servers as ServerSchema } from 'meteor/ohif:servers/both/schema/servers.js';\n\nlet collectionName = 'servers';\nif (Meteor.settings && Meteor.settings.public && Meteor.settings.public.clientOnly === true) {\n    collectionName = null;\n}\n\n// Servers describe the DICOM servers configurations\nconst Servers = new Mongo.Collection(collectionName);\n// TODO: Make the Schema match what we are currently sticking into the Collection\n//Servers.attachSchema(ServerSchema);\nServers._debugName = 'Servers';\nOHIF.servers.collections.servers = Servers;\n\nexport { Servers };\n","import { OHIF } from 'meteor/ohif:core';\nimport { Servers, CurrentServer } from 'meteor/ohif:servers/both/collections';\n\n/**\n * Retrieves the current server configuration used to retrieve studies\n */\nOHIF.servers.getCurrentServer = () => {\n    const currentServer = CurrentServer.findOne();\n\n    if (!currentServer) {\n        return;\n    }\n\n    const serverConfiguration = Servers.findOne({ _id: currentServer.serverId });\n\n    return serverConfiguration;\n};\n","import './getCurrentServer.js';\n","import './publications.js';\nimport './methods.js';\nimport './startup.js';\nimport './lib';\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\n\nMeteor.methods({\n    serverFind: query => OHIF.servers.control.find(query),\n    serverSave: serverSettings => OHIF.servers.control.save(serverSettings),\n    serverSetActive: serverId => OHIF.servers.control.setActive(serverId),\n    serverRemove: serverId => OHIF.servers.control.remove(serverId)\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Servers, CurrentServer } from 'meteor/ohif:servers/both/collections';\n\n// When publishing Servers Collection, do not publish the requestOptions.headers\n// field in case any authentication information is being passed\nMeteor.publish('servers', () => Servers.find({}, {\n    fields: {\n        'requestOptions.headers': 0,\n        'requestOptions.auth': 0,\n    }\n}));\n\nMeteor.publish('currentServer', () => CurrentServer.find());\n","import { Meteor } from 'meteor/meteor';\nimport { _ } from 'meteor/underscore';\nimport { OHIF } from 'meteor/ohif:core';\nimport { Servers } from 'meteor/ohif:servers/both/collections';\n\n// Check the servers on meteor startup\nif (Meteor.settings &&\n    Meteor.settings.public &&\n    Meteor.settings.public.clientOnly !== true) {\n\n    Meteor.startup(function() {\n        OHIF.log.info('Updating servers information from JSON configuration');\n\n        _.each(Meteor.settings.servers, function(endpoints, serverType) {\n            _.each(endpoints, function(endpoint) {\n                const server = _.clone(endpoint);\n                server.origin = 'json';\n                server.type = serverType;\n\n                // Try to find a server with the same name/type/origin combination\n                const existingServer = Servers.findOne({\n                    name: server.name,\n                    type: server.type,\n                    origin: server.origin\n                });\n\n                // Check if server was already added. Update it if so and insert if not\n                if (existingServer) {\n                    Servers.update(existingServer._id, { $set: server });\n                } else {\n                    Servers.insert(server);\n                }\n            });\n        });\n\n        OHIF.servers.control.resetCurrentServer();\n    });\n}\n","import { Meteor } from 'meteor/meteor';\nimport { OHIF } from 'meteor/ohif:core';\nimport { Servers, CurrentServer } from 'meteor/ohif:servers/both/collections';\n\nOHIF.servers.control = {\n    writeCallback(error, affected) {\n        if (error) {\n            throw new Meteor.Error('data-write', error);\n        }\n    },\n\n    resetCurrentServer() {\n        const currentServer = CurrentServer.findOne();\n        if (currentServer && Servers.find({ _id: currentServer.serverId }).count()) {\n            return;\n        }\n\n        const newServer = Servers.findOne({\n            origin: 'json',\n            type: Meteor.settings.defaultServiceType || 'dicomWeb'\n        });\n\n        if (newServer) {\n            CurrentServer.remove({});\n            CurrentServer.insert({\n                serverId: newServer._id\n            });\n        }\n    },\n\n    find(query) {\n        return Servers.find(query).fetch();\n    },\n\n    save(serverSettings) {\n        const query = {\n            _id: serverSettings._id\n        };\n        const options = {\n            upsert: true\n        };\n\n        if (!serverSettings._id) {\n            delete serverSettings._id;\n        }\n\n        return Servers.update(query, serverSettings, options, this.writeCallback);\n    },\n\n    setActive(serverId) {\n        CurrentServer.remove({});\n        CurrentServer.insert({\n            serverId: serverId\n        });\n    },\n\n    remove(serverId) {\n        const query = {\n            _id: serverId\n        };\n\n        const removeStatus = Servers.remove(query, this.writeCallback);\n\n        OHIF.servers.control.resetCurrentServer();\n\n        return removeStatus;\n    }\n};\n","import './control.js';\n"]}